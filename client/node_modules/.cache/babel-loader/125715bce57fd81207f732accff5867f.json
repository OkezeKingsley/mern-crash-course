{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\practicing\\\\react-practice-3\\\\src\\\\BoxInformation.js\";\nimport { useState } from 'react';\nimport './Add.css'; //import { createContext } from 'react';\n//export const Information = createContext(itemHead);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoxInformation(prop) {\n  //reason we are using useState here is because we can't access\n  //a local datatype of a function globally. Be it variable, object etc..\n  //so we use useState here to grab the value of the local datatype\n  //inside the method of setItem then store it in the item variable\n  //outside the scope in the useState declaration.\n  // const [item, setItem] = useState();\n\n  /* const AddCart = () => {  \r\n  \n         setItem( {head:prop.title,\r\n                   body:prop.details\r\n                  }\r\n         )\r\n  \n     }\r\n   */\n  //storing each object properties with their value into a variable\n  // const itemHead = item.head;\n  // const itemBody = item.body;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        id: \"AddHead\",\n        children: \"Add header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BoxInformation;\nexport default BoxInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxInformation\");","map":{"version":3,"names":["useState","BoxInformation","prop","title","details"],"sources":["C:/Users/HP/Desktop/coding-files/practicing/react-practice-3/src/BoxInformation.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './Add.css';\r\n//import { createContext } from 'react';\r\n\r\n//export const Information = createContext(itemHead);\r\n\r\nfunction BoxInformation(prop){\r\n\r\n//reason we are using useState here is because we can't access\r\n//a local datatype of a function globally. Be it variable, object etc..\r\n//so we use useState here to grab the value of the local datatype\r\n//inside the method of setItem then store it in the item variable\r\n//outside the scope in the useState declaration.\r\n // const [item, setItem] = useState();\r\n\r\n /* const AddCart = () => {  \r\n\r\n        setItem( {head:prop.title,\r\n                  body:prop.details\r\n                 }\r\n        )\r\n\r\n    }\r\n  */\r\n\r\n    //storing each object properties with their value into a variable\r\n   // const itemHead = item.head;\r\n   // const itemBody = item.body;\r\n\r\n     \r\n    return(\r\n        <div>\r\n\r\n       {/*   <Information.Provider value={{itemHead, itemBody}}>\r\n                {this.props.children}\r\n            </Information.Provider> */} \r\n\r\n            <div className=\"box\">\r\n                <h5 id=\"AddHead\">Add header</h5>\r\n                <p>{prop.title}</p>\r\n                <p>{prop.details}</p>\r\n                    \r\n             </div>\r\n             <button className=\"btn\">Add to cart</button>\r\n    \r\n             <hr></hr>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoxInformation;"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP,C,CACA;AAEA;;;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;EAE7B;EACA;EACA;EACA;EACA;EACC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI;EACD;EACA;EAGC,oBACI;IAAA,wBAMI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAI,EAAE,EAAC,SAAP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIA,IAAI,CAACC;MAAT;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAID,IAAI,CAACE;MAAT;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAYK;MAAQ,SAAS,EAAC,KAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZL,eAcK;MAAA;MAAA;MAAA;IAAA,QAdL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;KA3CQH,c;AA6CT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}