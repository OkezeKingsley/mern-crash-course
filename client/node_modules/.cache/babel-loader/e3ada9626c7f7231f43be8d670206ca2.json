{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\coding-files\\\\practicing\\\\react-practice-3\\\\src\\\\BoxInformation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './Add.css';\nimport { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Boxlist = /*#__PURE__*/createContext();\n\nfunction BoxInformation(prop) {\n  _s();\n\n  //reason we are using useState here is because we can't access\n  //a local datatype of a function globally. Be it variable, object etc..\n  //so we use useState here to grab the value of the local datatype\n  //inside the method of setItem then store it in the item variable\n  //outside the scope in the useState declaration.\n  const [item, setItem] = useState();\n\n  const addCart = () => {\n    setItem({\n      head: prop.title,\n      body: prop.details\n    });\n  }; //storing each object properties with their value into a variable\n\n\n  const itemHead = item.head;\n  const itemBody = item.body;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        id: \"AddHead\",\n        children: \"Add header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: addCart,\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoxInformation, \"6jSMh1Im6vyvv0fD+7HDmxQni1Y=\");\n\n_c = BoxInformation;\nexport default BoxInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxInformation\");","map":{"version":3,"names":["useState","createContext","Boxlist","BoxInformation","prop","item","setItem","addCart","head","title","body","details","itemHead","itemBody"],"sources":["C:/Users/HP/Desktop/coding-files/practicing/react-practice-3/src/BoxInformation.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './Add.css';\r\nimport { createContext } from 'react';\r\n\r\nexport const Boxlist = createContext();\r\n\r\nfunction BoxInformation(prop){\r\n\r\n//reason we are using useState here is because we can't access\r\n//a local datatype of a function globally. Be it variable, object etc..\r\n//so we use useState here to grab the value of the local datatype\r\n//inside the method of setItem then store it in the item variable\r\n//outside the scope in the useState declaration.\r\n \r\nconst [item, setItem] = useState();\r\n\r\n  \r\n    const addCart = () => { \r\n        setItem( {head:prop.title,\r\n                  body:prop.details\r\n                 }\r\n        ) }\r\n\r\n\r\n    //storing each object properties with their value into a variable\r\n    const itemHead = item.head;\r\n    const itemBody = item.body;\r\n\r\n     \r\n    return(\r\n        <div>\r\n\r\n   {/*      <Boxlist.Provider value={{itemHead, itemBody}}>  */} \r\n            \r\n            <div className=\"box\">\r\n                <h5 id=\"AddHead\">Add header</h5>\r\n                <p>{prop.title}</p>\r\n                <p>{prop.details}</p>\r\n                    \r\n             </div>\r\n\r\n      {/*        </Boxlist.Provider>   */} \r\n\r\n             <button className=\"btn\" onClick={addCart}>Add to cart</button>\r\n    \r\n             <hr></hr>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoxInformation;\r\n\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,OAAO,gBAAGD,aAAa,EAA7B;;AAEP,SAASE,cAAT,CAAwBC,IAAxB,EAA6B;EAAA;;EAE7B;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;;EAGI,MAAMO,OAAO,GAAG,MAAM;IAClBD,OAAO,CAAE;MAACE,IAAI,EAACJ,IAAI,CAACK,KAAX;MACCC,IAAI,EAACN,IAAI,CAACO;IADX,CAAF,CAAP;EAGG,CAJP,CAXyB,CAkBzB;;;EACA,MAAMC,QAAQ,GAAGP,IAAI,CAACG,IAAtB;EACA,MAAMK,QAAQ,GAAGR,IAAI,CAACK,IAAtB;EAGA,oBACI;IAAA,wBAII;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAI,EAAE,EAAC,SAAP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIN,IAAI,CAACK;MAAT;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAIL,IAAI,CAACO;MAAT;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAaK;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEJ,OAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbL,eAeK;MAAA;MAAA;MAAA;IAAA,QAfL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GA3CQJ,c;;KAAAA,c;AA6CT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}